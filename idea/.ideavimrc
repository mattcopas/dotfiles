source ~/.vimrc

"" Turn off the error bell
set visualbell
set noerrorbells
set mapleader = " "

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=3

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
" "For a list of action ids, run :actionlist {pattern?}
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

"" Map <leader>e and <leader>E to go to next/previous error
map <leader>e <Action>(GotoNextError)
map <leader>E <Action>(GotoPreviousError)

"" Show error on hover
map gh <Action>(ShowErrorDescription)

"" Refactoring
map <leader>rR <Action>(RefactoringMenu)
map <leader>rr <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rc <Action>(IntroduceConstant)

" Code inspection
map <leader>vi <Action>(GotoImplementation)
map <leader>vu <Action>(FindUsages)

"" Running stuff
map gr <Action>(RunMenu)
map gR <Action>(RunAnything)

"" Terminal
map <M-x> <Action>(ActivateTerminalToolWindow)

"" Show file structure (methods etc)
map <Leader>F <Action>(FileStructurePopup)

"" Go to Select In menu (select terminal, file tree etc)
map <leader>ss <Action>(SelectIn)

"" Toggle breakpoint
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>B <Action>(ViewBreakpoints)

"" Close everything but editor - note that for this to work you need to close all Tool Windows and
"" (from Run Anything) run 'Store Current Layout as Default'
map <C-w>o <Action>(RestoreDefaultLayout)

"" Use <C-g> as <Esc>, similar to Emacs
map <C-g> <Esc>

" General Searching
map <leader>sp <Action>(FindInPath)

"" File searching
map <leader>fr <Action>(RecentFiles)
map <C-p> <Action>(GotoClass)
" For some reason this doesn't work with <leader><leader> or <leader><space>
map <space><space> <Action>(GotoFile)

"" <leader>gg maps to Magit like in emacs
"" NOTE Magit needs to be setup as a custom external command (named Magit)!
map <leader>gg <Action>(Tool_External Tools_Magit)

"" Do something similar to describe-function in emacs
map <leader>hf :actionlist<space>

" Find more examples here: https://jb.gg/share-ideavimrc

