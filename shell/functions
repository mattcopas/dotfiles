function klogs() {
  kubectl -n $1 get po | grep ^$2 | awk '{ print $1 }' | xargs kubectl -n $1 logs $3
}

function maven-project-version() {
  mvn -q \
    -Dexec.executable=echo \
    -Dexec.args='${project.version}' \
    --non-recursive \
    exec:exec
}

function process-on-port() {
  lsof -i tcp:$1
}

function exec_devcontainer() {
  if [[ -z $1 ]]; then
    container_grep=vsc
  else
    container_grep=vsc-$1
  fi
  docker exec -it $(docker ps | grep $container_grep | awk '{ print $1 }') /bin/bash
}

function __update_arch() {
  if ! command -v paru; then
    echo "Paru not found - updating arch with pacman"
    pacman -Syu
  else
    echo "Updating arch with paru"
    paru
  fi
}

function __update_macos() {

  echo "Performing upgrade for MacOS..."

  brew outdated -q

  # Bash equivelant
  #Â read -p "Proceed with update? Y/n " -n 1 -r confirm
  # Zsh equivalent
  read "confirm?Proceed with update? Y/n "
  if [[ $confirm =~ ^[Yy]$ ]] || [[ $confirm == "" ]]; then
    brew update && brew upgrade
  fi
}

function update() {
  if [[ -f "/etc/arch-release" ]]; then
    echo "Performing update for Arch Linux..."
    if ! command -v informant >/dev/null; then
      echo "Informant not installed - installing without checking for news!"
      __update_arch
    else
      sudo informant check && __update_arch
    fi
  elif [[ "$(uname)" == "Darwin" ]]; then
    __update_macos
  else
    echo "Unknown or unimplemented distro - not upgrading!"
  fi
}
